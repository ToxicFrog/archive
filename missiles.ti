class Missile_Impact
    inherit Object
    var theta : int := 0
    var target : ^Object := knot->data
    var fuel : int := 700
    body procedure Create(ix,iy,idx,idy:real)
        x := ix mod 1000
        y := iy
        dx := idx
        dy := idy
        theta := 0
        case (ix - (ix mod 1000)) div 1000 of
            label 1: target := knot->data
            label 2: target := knot->next->data
        end case
    end Create
    body procedure Update()
        theta := Theta(x,y,target->x,target->y)
        if fuel > 100 then
            fuel -= 2
            dx += ComponentX(SWConf.MissileImpactAccel,theta)
            dy += ComponentY(SWConf.MissileImpactAccel,theta)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
            x := x mod SCREEN_X
            y := y mod SCREEN_Y
            AddObject("explsion", Rand.Int(round(x)-4,round(x)+4)+round(ComponentX(4,theta+180 mod 360)), Rand.Int(round(y)-4,round(y)+4)+round(ComponentY(4,theta+180 mod 360)), 3.26,4.31)
        else
            fuel -= 1
            theta := Theta(x,y,target->x,target->y)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
        x := (x-STATUS_BAR_SIZE) mod (SCREEN_X-STATUS_BAR_SIZE) + STATUS_BAR_SIZE
        y := y mod SCREEN_Y
        end if
        if abs(TrueDist(x,y,knot->data->x,knot->data->y)) < SHIP_SIZE then
            Players(1).HP -= SWConf.DamagePerMissileImpact
            BlowItUp(round(x),round(y),2,5,5,8,26,31,24,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        elsif abs(TrueDist(x,y,knot->next->data->x,knot->next->data->y)) < SHIP_SIZE then
            Players(2).HP -= SWConf.DamagePerMissileImpact
            BlowItUp(round(x),round(y),2,5,5,8,26,31,24,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        elsif abs(TrueDist(x,y,SUN_X,SUN_Y)) < 16 or fuel = 0 then
            BlowItUp(round(x),round(y),2,5,5,8,39,44,24,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        end if
        Draw.FillOval(round(x),round(y),4,4,0)
        Draw.FillOval(round(x+ComponentX(4,theta)),round(y+ComponentY(4,theta)),3,3,0)
        Draw.FillOval(round(x+ComponentX(8,theta)),round(y+ComponentY(8,theta)),2,2,0)
        current := current->next
    end Update
end Missile_Impact

class Missile_Blast
    inherit Object
    var theta : int := 0
    var target : ^Object := knot->data
    var fuel : int := 700
    body procedure Create(ix,iy,idx,idy:real)
        x := ix mod 1000
        y := iy
        dx := idx
        dy := idy
        theta := 0
        case (ix - (ix mod 1000)) div 1000 of
            label 1: target := knot->data
            label 2: target := knot->next->data
        end case
    end Create
    body procedure Update()
        theta := Theta(x,y,target->x,target->y)
        if fuel > 100 then
            fuel -= 2
            dx += ComponentX(SWConf.MissileBlastAccel,theta)
            dy += ComponentY(SWConf.MissileBlastAccel,theta)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
            x := x mod SCREEN_X
            y := y mod SCREEN_Y
            AddObject("explsion", Rand.Int(round(x)-4,round(x)+4)+round(ComponentX(4,theta+180 mod 360)), Rand.Int(round(y)-4,round(y)+4)+round(ComponentY(4,theta+180 mod 360)), 3.39,4.44)
        else
            fuel -= 1
            theta := Theta(x,y,target->x,target->y)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
        x := (x-STATUS_BAR_SIZE) mod (SCREEN_X-STATUS_BAR_SIZE) + STATUS_BAR_SIZE
        y := y mod SCREEN_Y
        end if
        if abs(TrueDist(x,y,target->x,target->y)) < SHIP_SIZE+32 then
            Players(1).HP -= max(SWConf.DamagePerMissileBlast-round(TrueDist(x,y,knot->data->x,knot->data->y))*1,0)
            Players(2).HP -= max(SWConf.DamagePerMissileBlast-round(TrueDist(x,y,knot->next->data->x,knot->next->data->y))*1,0)
            BlowItUp(round(x),round(y),8,16,16,32,39,44,24,SWConf.DamagePerMissileBlast div 2,SWConf.DamagePerMissileBlast div 2)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        elsif abs(TrueDist(x,y,knot->next->data->x,knot->next->data->y)) < SHIP_SIZE+48 and 1=0 then
            Players(1).HP -= SWConf.DamagePerMissileBlast-round(TrueDist(x,y,knot->data->x,knot->data->y))
            Players(2).HP -= SWConf.DamagePerMissileBlast-round(TrueDist(x,y,knot->next->data->x,knot->data->y))
            BlowItUp(round(x),round(y),8,16,16,32,39,44,24,48,48)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        elsif abs(TrueDist(x,y,SUN_X,SUN_Y)) < 16 or fuel = 0 then
            BlowItUp(round(x),round(y),2,5,5,8,39,44,24,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        end if
        Draw.FillOval(round(x),round(y),4,4,0)
        Draw.FillOval(round(x+ComponentX(4,theta)),round(y+ComponentY(4,theta)),3,3,0)
        Draw.FillOval(round(x+ComponentX(8,theta)),round(y+ComponentY(8,theta)),2,2,0)
        current := current->next
    end Update
end Missile_Blast

class Needler
    inherit Object
    var theta : int := 0
    var target : ^Object := knot->data
    var fuel : int := 90
    body procedure Create(ix,iy,idx,idy:real)
        x := ix mod 1000
        y := iy
        dx := idx
        dy := idy
        theta := 0
        case (ix - (ix mod 1000)) div 1000 of
            label 1: target := knot->data
            label 2: target := knot->next->data
        end case
    end Create
    body procedure Update()
        theta := Theta(x,y,target->x,target->y)
        if fuel > 30 then
            fuel -= 2
            dx += ComponentX(SWConf.MissileNeedlerAccel,theta)
            dy += ComponentY(SWConf.MissileNeedlerAccel,theta)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
        x := (x-STATUS_BAR_SIZE) mod (SCREEN_X-STATUS_BAR_SIZE) + STATUS_BAR_SIZE
        y := y mod SCREEN_Y
            AddObject("explsion", Rand.Int(round(x)-4,round(x)+4)+round(ComponentX(4,theta+180 mod 360)), Rand.Int(round(y)-4,round(y)+4)+round(ComponentY(4,theta+180 mod 360)), 1.01,1.03)
        else
            fuel -= 1
            theta := Theta(x,y,target->x,target->y)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
        x := (x-STATUS_BAR_SIZE) mod (SCREEN_X-STATUS_BAR_SIZE) + STATUS_BAR_SIZE
        y := y mod SCREEN_Y
        end if
        if abs(TrueDist(x,y,knot->data->x,knot->data->y)) < SHIP_SIZE then
            Players(1).HP -= SWConf.DamagePerMissileNeedler
            BlowItUp(round(x),round(y),2,5,5,8,107,109,2,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        elsif abs(TrueDist(x,y,knot->next->data->x,knot->next->data->y)) < SHIP_SIZE then
            Players(2).HP -= SWConf.DamagePerMissileNeedler
            BlowItUp(round(x),round(y),2,5,5,8,107,109,2,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        elsif abs(TrueDist(x,y,SUN_X,SUN_Y)) < 16 or fuel = 0 then
            BlowItUp(round(x),round(y),2,5,5,8,39,44,2,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
            return
        end if
        Draw.FillOval(round(x),round(y),2,2,0)
        Draw.FillOval(round(x+ComponentX(2,theta)),round(y+ComponentY(4,theta)),1,1,0)
        Draw.FillOval(round(x+ComponentX(3,theta)),round(y+ComponentY(8,theta)),1,1,0)
        current := current->next
    end Update
end Needler

class Missile_Beam
    inherit Object
    var theta : int := 0
    var target : ^Object := knot->data
    var fuel : int := 500
    var cooldown : int := 0
    body procedure Create(ix,iy,idx,idy:real)
        x := ix mod 1000
        y := iy
        dx := idx
        dy := idy
        theta := 0
        case (ix - (ix mod 1000)) div 1000 of
            label 1: target := knot->data
            label 2: target := knot->next->data
        end case
    end Create
    body procedure Update()
        cooldown -= 1
        theta := Theta(x,y,target->x,target->y)
        if fuel > 100 then
            fuel -= 2
            dx += ComponentX(SWConf.MissileBeamAccel,theta)
            dy += ComponentY(SWConf.MissileBeamAccel,theta)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
        x := (x-STATUS_BAR_SIZE) mod (SCREEN_X-STATUS_BAR_SIZE) + STATUS_BAR_SIZE
        y := y mod SCREEN_Y
            AddObject("explsion", Rand.Int(round(x)-4,round(x)+4)+round(ComponentX(4,theta+180 mod 360)), Rand.Int(round(y)-4,round(y)+4)+round(ComponentY(4,theta+180 mod 360)), 3.51,4.56)
        else
            fuel -= 1
            theta := Theta(x,y,target->x,target->y)
            dx += ((SUN_X-x)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            dy += ((SUN_Y-y)/TrueDist(x,y,SUN_X,SUN_Y)**2)*SWConf.Gravity
            x += dx
            y += dy
        x := (x-STATUS_BAR_SIZE) mod (SCREEN_X-STATUS_BAR_SIZE) + STATUS_BAR_SIZE
        y := y mod SCREEN_Y
        end if
        Draw.FillOval(round(x),round(y),4,4,0)
        Draw.FillOval(round(x+ComponentX(4,theta)),round(y+ComponentY(4,theta)),3,3,0)
        Draw.FillOval(round(x+ComponentX(8,theta)),round(y+ComponentY(8,theta)),2,2,0)
        if abs(TrueDist(x,y,SUN_X,SUN_Y)) < 16 or fuel = 0 then
            BlowItUp(round(x),round(y),2,5,5,8,39,44,24,3,3)
            current := current->next
            current->prev := current->prev->prev
            rmObject(current->prev->next)
            current->prev->next := current
        elsif abs(TrueDist(x,y,target->x,target->y)) < SHIP_SIZE+SWConf.MiniBeamRange and cooldown<1 then
            AddObject("minibeam", x+ComponentX(1,theta), y+ComponentY(1,theta), ComponentX(1,theta), ComponentY(1,theta))
            cooldown := 0
            current := current->next
        end if
        current := current->next
    end Update
end Missile_Beam
