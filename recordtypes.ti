%records
%holds player stats that need to be public (and thus not part of Object:Player)
type PlayerStats : record
        HP : int
        name : string(64)
        kills : int
        deaths : int
        weapon : int
        altweapon : int
        weapons : array 1 .. 4 of boolean
        ammo : array 1 .. 4 of int
end record

%one node of the double-linked pointer ring that holds all Objects
type *node : record
        %pointer to next node
        next : ^node
        %and to previous
        prev : ^node
        %and to the Object that the node links to
        data : ^Object
end record

%weapon stats record
type Weapon : record
    Name : string(8)
    ROF : int
    Variance : int
    Velocity : int
    Dependency : int
    Cooldown : int
    Image : int
end record

%the configuration - this one is huge, good thing it's only implemented once
type Configuration : record
        PlayerHP : int
        PlayerAccel : real
        Player1Color : int
        Player2Color : int

        DamagePerBullet : int
        DamagePerMiniBeam : int
        DamagePerLightBeam : int
        DamagePerHeavyBeam : int
        DamagePerMissileImpact : int
        DamagePerMissileBlast : int
        DamagePerMissileNeedler : int           
        
        MiniBeamRange : int
        LightBeamRange : int
        HeavyBeamRange : int
        MissileImpactAccel : real
        MissileBlastAccel : real
        MissileNeedlerAccel : real
        MissileBeamAccel : real

        Gravity : real
        
        KillsToWin : int
        DeathsToLose : int
        MissilesPerPack : int
        
        InitMassDriver : boolean
        InitWMassDriver : boolean
        InitXRL : boolean
        InitBrightLance : boolean
        
        InitImpactMissiles : int
        InitBlastMissiles : int
        InitNeedlers : int
        InitBeamMissiles : int
        
        Key1Up : char
        Key1Lf : char
        Key1Rt : char
        Key1Gun : char
        Key1Msl : char
        Key1NextGun : char
        Key1NextMsl : char
        
        Key2Up : char
        Key2Lf : char
        Key2Rt : char
        Key2Gun : char
        Key2Msl : char
        Key2NextGun : char
        Key2NextMsl : char
end record
